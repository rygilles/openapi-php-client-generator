{% set bearerTokenDefined = false %}
{% include 'includes/classHeader.php.twig' %}
{
	/**
	 * API base url for requests
	 *
	 * @var string
	 */
	protected $apiBaseUrl;

	/**
	 * Guzzle client for API requests
	 *
	 * @var GuzzleClient;
	 */
	protected $httpClient;

{% if security is defined %}
{% for scheme in security %}
{% if (scheme.type == 'http' and scheme.scheme == 'bearer') or scheme.type == 'oauth2' %}
{% if bearerTokenDefined == false %}
{% set bearerTokenDefined = true %}
	/**
	 * Bearer token
	 *
	 * @var string
	 */
	protected $bearerToken;

{% endif %}
{% endif %}
{% if scheme.type == 'oauth2' %}
{% for flow in scheme.flows %}
{% if flow.authorizationUrl is defined %}
{% if authorizationUrlDefined is not defined %}
{% set authorizationUrlDefined = true  %}
	/**
	 * OAuth2 authorization url
	 *
	 * @var string
	 */
	protected $OAuthAuthorizationUrl = '{{ flow.authorizationUrl }}';

{% endif %}
{% endif %}
{% if flow.tokenUrl is defined %}
{% if tokenUrlDefined is not defined %}
{% set tokenUrlUrlDefined = true  %}
	/**
	 * OAuth2 token url
	 *
	 * @var string
	 */
	protected $OAuthTokenUrl = '{{ flow.tokenUrl }}';

{% endif %}
{% endif %}
{% if flow.refreshUrl is defined %}
{% if refreshUrlDefined is not defined %}
{% set refreshUrlDefined = true  %}
	/**
	 * OAuth2 refresh url
	 *
	 * @var string
	 */
	protected $OAuthRefreshUrl = '{{ flow.refreshUrl }}';

{% endif %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
	/**
	 * Authentication access token
	 *
	 * @var string
	 */
	protected $token;

{% for manager in managers %}
	/**
	 * {{ manager.name }} manager
	 *
	 * @var {{ manager.className }}
	 */
	protected ${{ manager.lowerCamelCaseClassName }};

{% endfor %}
	/**
	 * API Client class constructor
	 *
	 * @param string $apiBaseUrl API base url for requests
	 */
	public function __construct($apiBaseUrl = '{{ apiBaseUrl }}')
	{
		$this->apiBaseUrl = $apiBaseUrl;

{% for manager in managers %}
		$this->{{ manager.lowerCamelCaseClassName }} = new {{ manager.className }}($this);
{% endfor %}
	}

	/**
	 * Return the API base url
	 *
	 * @return string
	 */
	public function getApiBaseUrl()
	{
		return $this->apiBaseUrl;
	}

	/**
	 * Return the Guzzle HTTP client
	 *
	 * @return GuzzleClient
	 */
	public function getHttpClient()
	{
		return $this->httpClient;
	}
{% if bearerTokenDefined == true %}
	/**
	 * Set the bearer token manually
	 *
	 * @param string $bearerToken
	 */
	public function setBearerToken($bearerToken)
	{
		$this->bearerToken = $bearerToken;
	}

{% endif %}
{% for manager in managers %}
	/**
	 * Return the {{ manager.name }} manager
	 *
	 * @return {{ manager.className }}
	 */
	public function {{ manager.className }}()
	{
		return $this->{{ manager.lowerCamelCaseClassName }};
	}
{% if not loop.last %}{{ "\t\n" }}{% endif %}
{% endfor %}
}